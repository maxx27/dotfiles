
# to see options value run the following commands in shell:
# tmux show-options -g # for global options
# tmux show-options -w # for window options
# tmux show-options -s # for server options

# display "Sync #{?synchronize-panes,ON,OFF}"

# ---------------------------------------------------------------
# Basic config
# ---------------------------------------------------------------

set -g default-terminal "screen-256color"

# lower escape timing for quicker response to scroll-buffer access
set -gs escape-time 0

# Make the repeat time a bit longer; this works best when the repeating command
# involves CTRL so that releasing CTRL ends the repetition
#set -g repeat-time 1000

# Keep transient things around longer
set -g display-time 4000
#set -g display-panes-time 4000

# Allow tmux to process hex codes sent by iTerm
#set -g assume-paste-time 0

# enable mouse support for switching/resizing panes/windows
setw -g mouse on

# increase scrollback lines
set -g history-limit 20000

# renumber windows sequentially after closing any of them
set -g renumber-windows on
setw -g automatic-rename off

#set -g set-titles on
#set -g set-titles-string "#T - #W"
# https://unix.stackexchange.com/questions/75216/tmux-set-titles-doesnt-work
#set -g terminal-overrides "xterm*:XT:smcup@:rmcup@"

# Enable focus events for supporting terminals
# see https://unix.stackexchange.com/questions/33289/can-i-make-tmux-tell-vim-when-its-pane-loses-focus
set -g focus-events on

# Don't let apps change the window name
#set -g allow-rename off

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# activity alerts
setw -g monitor-activity on # highlight if any changes in terminal
set -g visual-activity off  # no message

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
#setw -g aggressive-resize on

# get Ctrl-arrows back
# (I guess autodetect works)
#setw -g xterm-keys on

# ---------------------------------------------------------------
# Colors/Apperance
# ---------------------------------------------------------------

#source ~/.tmux/colors/light.conf
#source ~/.tmux/colors/dark.conf

# ---------------------------------------------------------------
# Status Bar
# ---------------------------------------------------------------

set -g status on

# Update the status bar every few seconds
set -g status-interval 5

# <host> .... <windows> .... <info>
set -g status-left-length 30
#set -g status-left "#[fg=green][#S] #[fg=yellow]#I #[fg=cyan]#P"
#set -g status-left ' #h '
set -g status-left '#[fg=white]#h #[fg=green]S:#S W:#I P:#P '
#set -g status-right '#{battery_icon} #{battery_percentage} | #{continuum_status} | %m/%d | %H:%M '
#set -g status-right "Battery: #{battery_icon} #{battery_percentage} #{battery_remain} | #(date '+%a, %b %d - %I:%M')"
set -g status-right '#[fg=cyan]%Y-%m-%d %H:%M '
set -g status-justify centre

#set -g window-status-format ' #{?window_zoomed_flag,*  ,}#I:#W '
#set -g window-status-current-format ' #{?window_zoomed_flag,*  ,}#I:#W '


# statusbar style
set -g status-style 'fg=white,bg=black'

# window style
set -g window-status-style 'fg=cyan,bg=default'
set -g window-status-current-style 'fg=white,bg=red'

# pane style
set -g pane-border-style 'fg=colour8,bg=default'
set -g pane-active-border-style 'fg=cyan,bg=default'

# message text
set -g message-style 'fg=white,bold,bg=black'


# clock
#set -g clock-mode-colour colour2 #green

# ---------------------------------------------------------------
# Key bindings
# ---------------------------------------------------------------

# unbind default prefix and set it to Ctrl+a
#unbind C-b
#set -g prefix C-a
#bind C-a send-prefix
# Change the prefix to C-s
#set -g prefix C-s

# for nested tmux sessions
#bind a send-prefix

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# toggle mouse on/off
bind C-m set mouse \; display-message "Mouse is #{?mouse,on,off}"

#bind k confirm kill-window
#bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Window movement
#bind -r "<" swap-window -t -1
#bind -r ">" swap-window -t +1

# Respawn a pane (helpful when executables have moved, as during update_all)
#bind r respawn-pane -k

# Ask before killing a window
#unbind C-d
#bind -n C-d confirm-before -p "kill-pane #P? (y/n)" kill-pane

# synchronize all panes in a window
bind C-y setw synchronize-panes \; display-message "Sync is #{?synchronize-panes,on,off}"

# ---------------------------------------------------------------
# Vi-style
# ---------------------------------------------------------------

# set vi mode for status line (when enter commands interactively)
# set -g status-keys vi

# set vi mode for copy mode
setw -g mode-keys vi

# unbind all the arrow keys since we're using vi bindings
# unbind Left
# unbind Down
# unbind Up
# unbind Right

# switch panes using Vim style
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# resize panes using Vim style
# bind -r H resize-pane -L 5
# bind -r J resize-pane -D 5
# bind -r K resize-pane -U 5
# bind -r L resize-pane -R 5

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift + arrows to resize pane
bind -n S-Left resize-pane -L 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n S-Right resize-pane -R 2

# Moving between windows
#bind -r C-j select-window -t :+ # next
#bind -r C-k select-window -t :- # previos
#bind -r [ previous-window
#bind -r ] next-window
#bind -n S-left previous-window
#bind -n S-right next-window

# smart pane switching with awareness of vim splits
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
#bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#bind -T edit-mode-vi Up send-keys -X history-up
#bind -T edit-mode-vi Down send-keys -X history-down
#unbind -T copy-mode-vi [         ;   bind -T copy-mode-vi [ send-keys -X begin-selection
#unbind -T copy-mode-vi ]         ;   bind -T copy-mode-vi ] send-keys -X copy-selection
#

# unbind [
# bind Escape copy-mode
# bind -T vi-copy 'v' begin-selection
# bind -T vi-copy 'y' copy-selection
# unbind p
# bind p paste-buffer

# Copy and paste
bind -T copy-mode-vi v send-keys -X begin-selection
# Somebody uses `copy-selection` but it left selection as is.
# I found that cancel is more convenient.
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"
bind -T copy-mode-vi Space send-keys -X rectangle-toggle
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"

bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel "xsel -i --clipboard"
bind -T root MouseDown2Pane run -b "xclip -o | tmux load-buffer - && tmux paste-buffer -s ' '"

# ---------------------------------------------------------------
# Default bindings
# ---------------------------------------------------------------

# bind-key -T copy-mode-vi C-b               send-keys -X page-up
# bind-key -T copy-mode-vi C-c               send-keys -X cancel
# bind-key -T copy-mode-vi C-d               send-keys -X halfpage-down
# bind-key -T copy-mode-vi C-e               send-keys -X scroll-down
# bind-key -T copy-mode-vi C-f               send-keys -X page-down
# bind-key -T copy-mode-vi C-h               send-keys -X cursor-left
# bind-key -T copy-mode-vi C-j               send-keys -X copy-selection-and-cancel
# bind-key -T copy-mode-vi Enter             send-keys -X copy-selection-and-cancel
# bind-key -T copy-mode-vi C-u               send-keys -X halfpage-up
# bind-key -T copy-mode-vi C-v               send-keys -X rectangle-toggle
# bind-key -T copy-mode-vi C-y               send-keys -X scroll-up
# bind-key -T copy-mode-vi Escape            send-keys -X clear-selection
# bind-key -T copy-mode-vi Space             send-keys -X begin-selection
# bind-key -T copy-mode-vi $                 send-keys -X end-of-line
# bind-key -T copy-mode-vi ,                 send-keys -X jump-reverse
# bind-key -T copy-mode-vi /                 command-prompt -p "(search down)" "send -X search-forward \"%%%\""
# bind-key -T copy-mode-vi 0                 send-keys -X start-of-line
# bind-key -T copy-mode-vi 1                 command-prompt -N -I 1 -p (repeat) "send -N \"%%%\""
# bind-key -T copy-mode-vi 2                 command-prompt -N -I 2 -p (repeat) "send -N \"%%%\""
# bind-key -T copy-mode-vi 3                 command-prompt -N -I 3 -p (repeat) "send -N \"%%%\""
# bind-key -T copy-mode-vi 4                 command-prompt -N -I 4 -p (repeat) "send -N \"%%%\""
# bind-key -T copy-mode-vi 5                 command-prompt -N -I 5 -p (repeat) "send -N \"%%%\""
# bind-key -T copy-mode-vi 6                 command-prompt -N -I 6 -p (repeat) "send -N \"%%%\""
# bind-key -T copy-mode-vi 7                 command-prompt -N -I 7 -p (repeat) "send -N \"%%%\""
# bind-key -T copy-mode-vi 8                 command-prompt -N -I 8 -p (repeat) "send -N \"%%%\""
# bind-key -T copy-mode-vi 9                 command-prompt -N -I 9 -p (repeat) "send -N \"%%%\""
# bind-key -T copy-mode-vi :                 command-prompt -p "(goto line)" "send -X goto-line \"%%%\""
# bind-key -T copy-mode-vi ;                 send-keys -X jump-again
# bind-key -T copy-mode-vi ?                 command-prompt -p "(search up)" "send -X search-backward \"%%%\""
# bind-key -T copy-mode-vi A                 send-keys -X append-selection-and-cancel
# bind-key -T copy-mode-vi B                 send-keys -X previous-space
# bind-key -T copy-mode-vi D                 send-keys -X copy-end-of-line
# bind-key -T copy-mode-vi E                 send-keys -X next-space-end
# bind-key -T copy-mode-vi F                 command-prompt -1 -p "(jump backward)" "send -X jump-backward \"%%%\""
# bind-key -T copy-mode-vi G                 send-keys -X history-bottom
# bind-key -T copy-mode-vi H                 send-keys -X top-line
# bind-key -T copy-mode-vi J                 send-keys -X scroll-down
# bind-key -T copy-mode-vi K                 send-keys -X scroll-up
# bind-key -T copy-mode-vi L                 send-keys -X bottom-line
# bind-key -T copy-mode-vi M                 send-keys -X middle-line
# bind-key -T copy-mode-vi N                 send-keys -X search-reverse
# bind-key -T copy-mode-vi T                 command-prompt -1 -p "(jump to backward)" "send -X jump-to-backward \"%%%\""
# bind-key -T copy-mode-vi V                 send-keys -X select-line
# bind-key -T copy-mode-vi W                 send-keys -X next-space
# bind-key -T copy-mode-vi ^                 send-keys -X back-to-indentation
# bind-key -T copy-mode-vi b                 send-keys -X previous-word
# bind-key -T copy-mode-vi e                 send-keys -X next-word-end
# bind-key -T copy-mode-vi f                 command-prompt -1 -p "(jump forward)" "send -X jump-forward \"%%%\""
# bind-key -T copy-mode-vi g                 send-keys -X history-top
# bind-key -T copy-mode-vi h                 send-keys -X cursor-left
# bind-key -T copy-mode-vi j                 send-keys -X cursor-down
# bind-key -T copy-mode-vi k                 send-keys -X cursor-up
# bind-key -T copy-mode-vi l                 send-keys -X cursor-right
# bind-key -T copy-mode-vi n                 send-keys -X search-again
# bind-key -T copy-mode-vi o                 send-keys -X other-end
# bind-key -T copy-mode-vi q                 send-keys -X cancel
# bind-key -T copy-mode-vi t                 command-prompt -1 -p "(jump to forward)" "send -X jump-to-forward \"%%%\""
# bind-key -T copy-mode-vi v                 send-keys -X rectangle-toggle
# bind-key -T copy-mode-vi w                 send-keys -X next-word
# bind-key -T copy-mode-vi {                 send-keys -X previous-paragraph
# bind-key -T copy-mode-vi }                 send-keys -X next-paragraph
# bind-key -T copy-mode-vi MouseDown1Pane    select-pane
# bind-key -T copy-mode-vi MouseDrag1Pane    select-pane ; send-keys -X begin-selection
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
# bind-key -T copy-mode-vi WheelUpPane       select-pane ; send-keys -X -N 5 scroll-up
# bind-key -T copy-mode-vi WheelDownPane     select-pane ; send-keys -X -N 5 scroll-down
# bind-key -T copy-mode-vi DoubleClick1Pane  select-pane ; send-keys -X select-word
# bind-key -T copy-mode-vi TripleClick1Pane  select-pane ; send-keys -X select-line
# bind-key -T copy-mode-vi BSpace            send-keys -X cursor-left
# bind-key -T copy-mode-vi NPage             send-keys -X page-down
# bind-key -T copy-mode-vi PPage             send-keys -X page-up
# bind-key -T copy-mode-vi Up                send-keys -X cursor-up
# bind-key -T copy-mode-vi Down              send-keys -X cursor-down
# bind-key -T copy-mode-vi Left              send-keys -X cursor-left
# bind-key -T copy-mode-vi Right             send-keys -X cursor-right
# bind-key -T copy-mode-vi C-Up              send-keys -X scroll-up
# bind-key -T copy-mode-vi C-Down            send-keys -X scroll-down

# ---------------------------------------------------------------
# Plugins
# ---------------------------------------------------------------

# https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm' # Tmux package manager

# How to install other plugins from Github:
# To install new plugins press: prefix + I
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin "tmux-plugins/tmux-copycat"
#set -g @plugin "tmux-plugins/tmux-pain-control"
# Unbind some defaults which tmux-pain-control redefines
#unbind C-Left
#unbind C-Right
#unbind C-Up
#unbind C-Down
#set -g @plugin "tmux-plugins/tmux-yank"
#set -g @plugin 'tmux-plugins/tmux-open' # Open highlighted selection directly from Tmux
#set -g @plugin 'christoomey/vim-tmux-navigator'

#set -g @plugin 'tmux-plugins/tmux-resurrect' # Restore previous sessions on reboot
#set -g @resurrect-dir "$CACHEDIR/tmux/resurrect"
#set -g @resurrect-save 'S'
#set -g @resurrect-restore 'R'
#set -g @resurrect-capture-pane-contents 'on'
#set -g @resurrect-strategy-vim 'session'

#set -g @plugin 'tmux-plugins/tmux-continuum' # Restore previous sessions on system boot
#set -g @continuum-save-interval '15'
#set -g @continuum-boot 'on'
#set -g @continuum-boot-options 'iterm'
#set -g @continuum-restore 'on'
#set -g @continuum-save-interval '5'

#set -g @plugin 'tmux-plugins/tmux-battery' #Show battery icon/status
#set -g @batt_discharging_icon '-'
#set -g @batt_full_charge_icon '-'
#set -g @batt_high_charge_icon '-'
#set -g @batt_medium_charge_icon '-'
#set -g @batt_low_charge_icon '-'
#set -g @batt_charged_icon ' '
#set -g @batt_charging_icon '+'

# Initializes Tmux plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
